# i eat variables for breakfast
$stage = "<%= stage %>"
$domain_name = "<%= domain_name %>"
$deploy_to = "<%= deploy_to %>"
$wp_theme_name = "<%= wp_theme_name %>"
$application = "<%= application %>"
$user = "<%= user %>"
$group = "<%= group %>"

package { "nginx":
	ensure => latest,
#	hasrestart => true
}

package { "php5-fpm":
	ensure => latest
}

package { "varnish":
	ensure => latest
}

<% if stage == "development" %>
# to hack around the name resolution problem with a 12.04 host, Peter's env only
file { "/etc/resolv.conf":
	owner => root,
	group => root,
	mode => 644,
	source => "<%= deploy_to %>/config/puppet/files/vagrant_resolv.conf"
}
<% end %>

file { "/etc/nginx/sites-available/<%= application %>":
	owner => root,
	group => root,
	mode  => 644,
	content => template("<%= deploy_to %>/config/puppet/templates/nginx.erb"),
	require => Package["nginx"],
	notify => Service["nginx"]
}

file { "/etc/nginx/sites-enabled/<%= application %>":
	ensure => symlink,
	target => "/etc/nginx/sites-available/<%= application %>",
	require => Package["nginx"],
	notify => Service["nginx"]
}

file { "/etc/nginx/sites-enabled/default":
	ensure => absent,
	#require => Package["nginx"],
	#notify => Package["nginx"]
}

file { "/etc/php5/fpm/pool.d/vagrantsite.pool.conf":
	owner => root,
	group => root,
	mode => 644,
	content => template("<%= deploy_to %>/config/puppet/templates/php5-fpm.pool.conf.erb"),
	#require => Package["php5-fpm"],
	#notify => Package["php5-fpm"]
}

file { "/home/<%= user %>/php":
	ensure => directory,
	owner => <%= user %>,
	group => <%= group %>,
	require => Package["php5-fpm"]
}

file { "/home/<%= user %>/php/log":
	ensure => directory,
	owner => <%= user %>,
	group => <%= group %>,
	require => Package["php5-fpm"]
}

file { "/home/<%= user %>/php/sessions":
	ensure => directory,
	owner => <%= user %>,
	group => <%= group %>,
	require => Package["php5-fpm"]
}

file { "/home/<%= user %>/php/log/vagrantsite.access.log":
	owner => <%= user %>,
	group => <%= group %>,
	require => Package["php5-fpm"]
}

file { "/home/<%= user %>/php/log/vagrantsite.slow.log":
	owner => <%= user %>,
	group => <%= group %>,
	require => Package["php5-fpm"]
}

file { "/home/<%= user %>/php/log/error.log":
	owner => <%= user %>,
	group => <%= group %>,
	require => Package["php5-fpm"]
}

# varnish config file for :80
file { "/etc/default/varnish":
	owner => root,
	group => root,
	source => "<%= deploy_to %>/config/puppet/files/vagrant_etc_default_varnish",
	require => Package["varnish"]
}

file { "/etc/varnish/default.vcl":
	owner => root,
	group => root,
	source => "<%= deploy_to %>/config/puppet/files/vagrant_default.vcl",
	require => Package["varnish"]
}

define mysqldb( $user, $password, $host, $local_hostname ) {
	exec { "create-${name}-db":
		unless => $stage ? {
			'development' => "/usr/bin/mysql -u${user} -pvagrant ${name}",
			default	      => "/usr/bin/mysql --ssl -h ${db_host} ${name}",
		},
		command => $stage ? {
			'development' => "/usr/bin/mysql -uroot -pvagrant -e \"CREATE DATABASE ${name}; GRANT ALL ON ${name}.* TO ${user}@localhost IDENTIFIED BY '$password';\"",
			default       => "/usr/bin/mysql --ssl -h ${db_host} -e \"CREATE DATABASE ${name}; GRANT ALL ON ${name}.* TOTO ${user}@${local_hostname} IDENTIFIED BY '$password' REQUIRE SSL;\"",
			require => Service["mysqld"],
		},
	}
}

# set up database
mysqldb { "<%= db_name %>":
	user => "<%= db_user %>",
	password => "<%= db_password %>",
	host => "localhost",
	local_hostname => "localhost",
}

service { "nginx":
	ensure => running,
	#hasrestart => true,
	require => Package["nginx"]
}

service { "php5-fpm":
	ensure => running,
	#hasrestart => true,
	require => Package["php5-fpm"]
}

# start varnish
service { "varnish":
	ensure => running,
	require => Package["varnish"],
	subscribe => File["/etc/default/varnish"]
}
